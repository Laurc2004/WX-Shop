<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lrc.mapper.GoodsInfoMapper">
  <resultMap id="BaseResultMap" type="com.lrc.entity.GoodsInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="recommend" jdbcType="VARCHAR" property="recommend" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="typeId" jdbcType="BIGINT" property="typeid" />
    <result column="fields" jdbcType="VARCHAR" property="fields" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lrc.entity.GoodsInfo">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, price, discount, sales, hot, recommend, count, typeId, fields, userId, 
    level
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lrc.entity.GoodsInfo">
    insert into goods_info (id, name, price, 
      discount, sales, hot, 
      recommend, count, typeId, 
      fields, userId, level, 
      description)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{discount,jdbcType=DOUBLE}, #{sales,jdbcType=INTEGER}, #{hot,jdbcType=INTEGER}, 
      #{recommend,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{typeid,jdbcType=BIGINT}, 
      #{fields,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lrc.entity.GoodsInfo">
    insert into goods_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="fields != null">
        fields,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=BIGINT},
      </if>
      <if test="fields != null">
        #{fields,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrc.entity.GoodsInfo">
    update goods_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=BIGINT},
      </if>
      <if test="fields != null">
        fields = #{fields,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lrc.entity.GoodsInfo">
    update goods_info
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      discount = #{discount,jdbcType=DOUBLE},
      sales = #{sales,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      recommend = #{recommend,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=BIGINT},
      fields = #{fields,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrc.entity.GoodsInfo">
    update goods_info
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      discount = #{discount,jdbcType=DOUBLE},
      sales = #{sales,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      recommend = #{recommend,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=BIGINT},
      fields = #{fields,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>