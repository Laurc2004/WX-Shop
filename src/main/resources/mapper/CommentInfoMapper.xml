<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lrc.mapper.CommentInfoMapper">
  <resultMap id="BaseResultMap" type="com.lrc.entity.CommentInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goodsId" jdbcType="BIGINT" property="goodsid" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="createTime" jdbcType="VARCHAR" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lrc.entity.CommentInfo">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goodsId, userId, level, createTime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lrc.entity.CommentInfo">
    insert into comment_info (id, goodsId, userId, 
      level, createTime, content
      )
    values (#{id,jdbcType=BIGINT}, #{goodsid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, 
      #{level,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lrc.entity.CommentInfo">
    insert into comment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrc.entity.CommentInfo">
    update comment_info
    <set>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lrc.entity.CommentInfo">
    update comment_info
    set goodsId = #{goodsid,jdbcType=BIGINT},
      userId = #{userid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrc.entity.CommentInfo">
    update comment_info
    set goodsId = #{goodsid,jdbcType=BIGINT},
      userId = #{userid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>